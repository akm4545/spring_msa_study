spring.jpa.hibernate.ddl-auto = none
spring.jpa.database = POSTGRESQL
spring.datasource.platform = postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName = org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

server.port = 8081

spring.cloud.loadbalancer.ribbon.enabled = true

management.endpoints.web.exposure.include = *
management.endpoints.enabled-by-default = true

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

# 생성된 realm 이름
keycloak.realm = spmia-realm
# 키클록 서버 URL 인증 엔드포인트
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
#생성된 클라이언트 ID
keycloak.resource = ostock
#생성된 클라이언트 시크릿
keycloak.credentials.secret = 13d408fb-cdde-4c09-86b2-12317ba353ab
keycloak.use-resource-role-mappings = true
keycloak.bearer-only = true

#메시지를 작성할 메시지 큐(또는 토픽) 이름
spring.cloud.stream.bindings.output.destination=orgChangeTopic
#송수신할 메시지 타입
spring.cloud.stream.bindings.output.content-type=application/json
#카프카와 주키퍼의 네트워크 위치
spring.cloud.stream.kafka.binder.zkNodes=localhost:9092
spring.cloud.stream.kafka.binder.brokers=localhost:9092

spring.zipkin.baseUrl: http://localhost:9411