example.property=I AM THE DEFAULT

logstash.host= 3.136.161.26:5000
logging.config= classpath:logback-delayed.xml

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.cloud.loadbalancer.ribbon.enabled = false

management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

server.port = 8180

#??? ?? ?? ip ?? ??
eureka.instance.preferIpAddress = true
#??? ??? ?? ??
eureka.client.registerWithEureka = true
#????? ??? ??? ???? = ??? ??
eureka.client.fetchRegistry = true
#??? ???? ?? ??
#eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/
eureka.client.serviceUrl.defaultZone = http://eurekaserver:8070/eureka/

# keycloak.realm = spmia-realm
# keycloak.auth-server-url = http://localhost:8080/auth
# keycloak.ssl-required = external
# keycloak.resource = ostock
# keycloak.credentials.secret = 13d408fb-cdde-4c09-86b2-12317ba353ab
# keycloak.use-resource-role-mappings = true
# keycloak.bearer-only = true

security.oauth2.resource.userInfoUri= http://authenticationservice:8082/user
security.oauth2.client.grant-type= client_credentials
signing.key: "345345fsdfsf5345"

#\uC785\uB825 \uCC44\uB110\uC744 orgChangeTopic \uD050\uC5D0 \uB9E4\uD551\uD55C\uB2E4
#spring.cloud.stream.bindings.input.destination= orgChangeTopic
#spring.cloud.stream.bindings.input.content-type= application/json
#spring.cloud.stream.bindings.input.group= licensingGroup

#\uC0AC\uC6A9\uC790 \uC815\uC758 \uC785\uB825 \uCC44\uB110
spring.cloud.stream.bindings.inboundOrgChanges.destination=orgChangeTopic
spring.cloud.stream.bindings.inboundOrgChanges.content-type=application/json
spring.cloud.stream.bindings.inboundOrgChanges.group= licensingGroup

#\uC11C\uBE44\uC2A4\uBCC4\uB85C \uD55C \uBC88\uC5D0 \uCC98\uB9AC\uD558\uB824\uACE0 group \uD504\uB85C\uD37C\uD2F0 \uC0AC\uC6A9
#\uBA54\uC2DC\uC9C0\uB97C \uC18C\uBE44\uD558\uB294 \uC18C\uBE44\uC790 \uADF8\uB8F9 \uC774\uB984 \uC815\uC758
#licensing service \uB294 \uD558\uB098\uC758 \uC11C\uBE44\uC2A4\uC9C0\uB9CC \uC774 \uC11C\uBE44\uC2A4\uC758 \uC778\uC2A4\uD134\uC2A4\uB294 \uC5EC\uB7EC\uAC1C\uC77C \uC218 \uC788\uC5B4\uC11C \uADF8 \uADF8\uB8F9\uC744 \uBB36\uC74C
#\uC989 licensing service\uC758 \uC778\uC2A4\uD134\uC2A4\uB4E4\uC740 licensingGroup\uC774\uB77C\uB294 \uC774\uB984\uC744 \uAC00\uC9C0\uAC8C \uB41C\uB2E4
#spring.cloud.stream.bindings.input.group= licensingGroup
# spring.cloud.stream.kafka.binder.zkNodes= localhost:9092 
# spring.cloud.stream.kafka.binder.brokers= localhost:9092
spring.cloud.stream.kafka.binder.zkNodes= kafka 
spring.cloud.stream.kafka.binder.brokers= kafka


# spring.zipkin.baseUrl= http://localhost:9411
spring.zipkin.baseUrl= http://zipkin:9411
spring.sleuth.sampler.percentage= 1

# redis.server = localhost
redis.server = ostock-redis.ymengq.0001.use1.cache.amazonaws.com
redis.port = 6379
